-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Gramatyka/ParLatte.y
-----------------------------------------------------------------------------

state 133 contains 1 shift/reduce conflicts.

rule 40 is unused
rule 41 is unused
rule 42 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident '{' ListClsBowel '}'       (6)
	TopDef -> 'class' Ident 'extends' Ident '{' ListClsBowel '}'   (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Arg -> Type Ident                                  (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	ClsBowel -> Type ListItem ';'                      (14)
	ClsBowel -> Type Ident '(' ListArg ')' Block       (15)
	ListClsBowel ->                                    (16)
	ListClsBowel -> ListClsBowel ClsBowel              (17)
	Block -> '{' ListStmt '}'                          (18)
	ListStmt ->                                        (19)
	ListStmt -> ListStmt Stmt                          (20)
	Stmt -> ';'                                        (21)
	Stmt -> Block                                      (22)
	Stmt -> Type ListItem ';'                          (23)
	Stmt -> Ident '=' Expr ';'                         (24)
	Stmt -> Ident '++' ';'                             (25)
	Stmt -> Ident '--' ';'                             (26)
	Stmt -> 'return' Expr ';'                          (27)
	Stmt -> 'return' ';'                               (28)
	Stmt -> 'if' '(' Expr ')' Stmt                     (29)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (30)
	Stmt -> 'while' '(' Expr ')' Stmt                  (31)
	Stmt -> Expr ';'                                   (32)
	Stmt -> '(' Type ')null'                           (33)
	Item -> Ident                                      (34)
	Item -> Ident '=' Expr                             (35)
	ListItem -> Item                                   (36)
	ListItem -> Item ',' ListItem                      (37)
	Type -> Ident                                      (38)
	Type -> 'void'                                     (39)
	ListType ->                                        (40)
	ListType -> Type                                   (41)
	ListType -> Type ',' ListType                      (42)
	Expr6 -> Ident                                     (43)
	Expr6 -> 'new' Ident                               (44)
	Expr6 -> Integer                                   (45)
	Expr6 -> 'true'                                    (46)
	Expr6 -> 'false'                                   (47)
	Expr6 -> Ident '(' ListExpr ')'                    (48)
	Expr6 -> String                                    (49)
	Expr6 -> '(' Expr ')'                              (50)
	Expr5 -> Expr5 '.' Ident                           (51)
	Expr5 -> Expr5 '.' Ident '(' ListExpr ')'          (52)
	Expr5 -> '-' Expr6                                 (53)
	Expr5 -> '!' Expr6                                 (54)
	Expr5 -> Expr6                                     (55)
	Expr4 -> Expr4 MulOp Expr5                         (56)
	Expr4 -> Expr5                                     (57)
	Expr3 -> Expr3 AddOp Expr4                         (58)
	Expr3 -> Expr4                                     (59)
	Expr2 -> Expr2 RelOp Expr3                         (60)
	Expr2 -> Expr3                                     (61)
	Expr1 -> Expr2 '&&' Expr1                          (62)
	Expr1 -> Expr2                                     (63)
	Expr -> Expr1 '||' Expr                            (64)
	Expr -> Expr1                                      (65)
	ListExpr ->                                        (66)
	ListExpr -> Expr                                   (67)
	ListExpr -> Expr ',' ListExpr                      (68)
	AddOp -> '+'                                       (69)
	AddOp -> '-'                                       (70)
	MulOp -> '*'                                       (71)
	MulOp -> '/'                                       (72)
	MulOp -> '%'                                       (73)
	RelOp -> '<'                                       (74)
	RelOp -> '<='                                      (75)
	RelOp -> '>'                                       (76)
	RelOp -> '>='                                      (77)
	RelOp -> '=='                                      (78)
	RelOp -> '!='                                      (79)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	')null'        { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'class'        { PT _ (TS _ 23) }
	'else'         { PT _ (TS _ 24) }
	'extends'      { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'if'           { PT _ (TS _ 27) }
	'new'          { PT _ (TS _ 28) }
	'return'       { PT _ (TS _ 29) }
	'true'         { PT _ (TS _ 30) }
	'void'         { PT _ (TS _ 31) }
	'while'        { PT _ (TS _ 32) }
	'{'            { PT _ (TS _ 33) }
	'||'           { PT _ (TS _ 34) }
	'}'            { PT _ (TS _ 35) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ListTopDef      rules 8, 9
	Arg             rule  10
	ListArg         rules 11, 12, 13
	ClsBowel        rules 14, 15
	ListClsBowel    rules 16, 17
	Block           rule  18
	ListStmt        rules 19, 20
	Stmt            rules 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	Item            rules 34, 35
	ListItem        rules 36, 37
	Type            rules 38, 39
	ListType        rules 40, 41, 42
	Expr6           rules 43, 44, 45, 46, 47, 48, 49, 50
	Expr5           rules 51, 52, 53, 54, 55
	Expr4           rules 56, 57
	Expr3           rules 58, 59
	Expr2           rules 60, 61
	Expr1           rules 62, 63
	Expr            rules 64, 65
	ListExpr        rules 66, 67, 68
	AddOp           rules 69, 70
	MulOp           rules 71, 72, 73
	RelOp           rules 74, 75, 76, 77, 78, 79

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'class'        shift, and enter state 8
	'void'         shift, and enter state 9
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	')null'        reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 38)

	L_ident        reduce using rule 38


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'class'        shift, and enter state 8
	'void'         shift, and enter state 9
	L_ident        shift, and enter state 2
	%eof           reduce using rule 8

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 12
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_ident        shift, and enter state 2

	Ident          goto state 11

State 8

	TopDef -> 'class' . Ident '{' ListClsBowel '}'      (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident '{' ListClsBowel '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 10

State 9

	Type -> 'void' .                                    (rule 39)

	')null'        reduce using rule 39
	L_ident        reduce using rule 39


State 10

	TopDef -> 'class' Ident . '{' ListClsBowel '}'      (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident '{' ListClsBowel '}'    (rule 7)

	'extends'      shift, and enter state 14
	'{'            shift, and enter state 15


State 11

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 13


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 13

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 11
	'void'         shift, and enter state 9
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 18
	ListArg        goto state 19
	Type           goto state 20

State 14

	TopDef -> 'class' Ident 'extends' . Ident '{' ListClsBowel '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 17

State 15

	TopDef -> 'class' Ident '{' . ListClsBowel '}'      (rule 6)

	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16

	ListClsBowel   goto state 16

State 16

	TopDef -> 'class' Ident '{' ListClsBowel . '}'      (rule 6)
	ListClsBowel -> ListClsBowel . ClsBowel             (rule 17)

	'void'         shift, and enter state 9
	'}'            shift, and enter state 27
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClsBowel       goto state 25
	Type           goto state 26

State 17

	TopDef -> 'class' Ident 'extends' Ident . '{' ListClsBowel '}'    (rule 7)

	'{'            shift, and enter state 24


State 18

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 23


State 19

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 22


State 20

	Arg -> Type . Ident                                 (rule 10)

	L_ident        shift, and enter state 2

	Ident          goto state 21

State 21

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 22

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 34

	Block          goto state 33

State 23

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'void'         shift, and enter state 9
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 18
	ListArg        goto state 32
	Type           goto state 20

State 24

	TopDef -> 'class' Ident 'extends' Ident '{' . ListClsBowel '}'    (rule 7)

	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16

	ListClsBowel   goto state 31

State 25

	ListClsBowel -> ListClsBowel ClsBowel .             (rule 17)

	'void'         reduce using rule 17
	'}'            reduce using rule 17
	L_ident        reduce using rule 17


State 26

	ClsBowel -> Type . ListItem ';'                     (rule 14)
	ClsBowel -> Type . Ident '(' ListArg ')' Block      (rule 15)

	L_ident        shift, and enter state 2

	Ident          goto state 28
	Item           goto state 29
	ListItem       goto state 30

State 27

	TopDef -> 'class' Ident '{' ListClsBowel '}' .      (rule 6)

	'class'        reduce using rule 6
	'void'         reduce using rule 6
	L_ident        reduce using rule 6
	%eof           reduce using rule 6


State 28

	ClsBowel -> Type Ident . '(' ListArg ')' Block      (rule 15)
	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	'('            shift, and enter state 39
	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 40


State 29

	ListItem -> Item .                                  (rule 36)
	ListItem -> Item . ',' ListItem                     (rule 37)

	','            shift, and enter state 38
	';'            reduce using rule 36


State 30

	ClsBowel -> Type ListItem . ';'                     (rule 14)

	';'            shift, and enter state 37


State 31

	TopDef -> 'class' Ident 'extends' Ident '{' ListClsBowel . '}'    (rule 7)
	ListClsBowel -> ListClsBowel . ClsBowel             (rule 17)

	'void'         shift, and enter state 9
	'}'            shift, and enter state 36
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClsBowel       goto state 25
	Type           goto state 26

State 32

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 33

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'class'        reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 34

	Block -> '{' . ListStmt '}'                         (rule 18)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19

	ListStmt       goto state 35

State 35

	Block -> '{' ListStmt . '}'                         (rule 18)
	ListStmt -> ListStmt . Stmt                         (rule 20)

	'!'            shift, and enter state 51
	'('            shift, and enter state 67
	'-'            shift, and enter state 53
	';'            shift, and enter state 68
	'false'        shift, and enter state 54
	'if'           shift, and enter state 69
	'new'          shift, and enter state 55
	'return'       shift, and enter state 70
	'true'         shift, and enter state 56
	'void'         shift, and enter state 9
	'while'        shift, and enter state 71
	'{'            shift, and enter state 34
	'}'            shift, and enter state 72
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 62
	Integer        goto state 42
	String         goto state 43
	Block          goto state 63
	Stmt           goto state 64
	Type           goto state 65
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 66

State 36

	TopDef -> 'class' Ident 'extends' Ident '{' ListClsBowel '}' .    (rule 7)

	'class'        reduce using rule 7
	'void'         reduce using rule 7
	L_ident        reduce using rule 7
	%eof           reduce using rule 7


State 37

	ClsBowel -> Type ListItem ';' .                     (rule 14)

	'void'         reduce using rule 14
	'}'            reduce using rule 14
	L_ident        reduce using rule 14


State 38

	ListItem -> Item ',' . ListItem                     (rule 37)

	L_ident        shift, and enter state 2

	Ident          goto state 60
	Item           goto state 29
	ListItem       goto state 61

State 39

	ClsBowel -> Type Ident '(' . ListArg ')' Block      (rule 15)

	')'            reduce using rule 11
	'void'         shift, and enter state 9
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 18
	ListArg        goto state 59
	Type           goto state 20

State 40

	Item -> Ident '=' . Expr                            (rule 35)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 50

State 41

	Expr6 -> Ident .                                    (rule 43)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 48)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 82
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 42

	Expr6 -> Integer .                                  (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'.'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 43

	Expr6 -> String .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 44

	Expr5 -> Expr6 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 45

	Expr5 -> Expr5 . '.' Ident                          (rule 51)
	Expr5 -> Expr5 . '.' Ident '(' ListExpr ')'         (rule 52)
	Expr4 -> Expr5 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'.'            shift, and enter state 106
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57


State 46

	Expr4 -> Expr4 . MulOp Expr5                        (rule 56)
	Expr3 -> Expr4 .                                    (rule 59)

	'!='           reduce using rule 59
	'%'            shift, and enter state 103
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            shift, and enter state 104
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            shift, and enter state 105
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59

	MulOp          goto state 102

State 47

	Expr3 -> Expr3 . AddOp Expr4                        (rule 58)
	Expr2 -> Expr3 .                                    (rule 61)

	'!='           reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'+'            shift, and enter state 100
	','            reduce using rule 61
	'-'            shift, and enter state 101
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61

	AddOp          goto state 99

State 48

	Expr2 -> Expr2 . RelOp Expr3                        (rule 60)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 62)
	Expr1 -> Expr2 .                                    (rule 63)

	'!='           shift, and enter state 92
	'&&'           shift, and enter state 93
	')'            reduce using rule 63
	','            reduce using rule 63
	';'            reduce using rule 63
	'<'            shift, and enter state 94
	'<='           shift, and enter state 95
	'=='           shift, and enter state 96
	'>'            shift, and enter state 97
	'>='           shift, and enter state 98
	'||'           reduce using rule 63

	RelOp          goto state 91

State 49

	Expr -> Expr1 . '||' Expr                           (rule 64)
	Expr -> Expr1 .                                     (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65
	'||'           shift, and enter state 90


State 50

	Item -> Ident '=' Expr .                            (rule 35)

	','            reduce using rule 35
	';'            reduce using rule 35


State 51

	Expr5 -> '!' . Expr6                                (rule 54)

	'('            shift, and enter state 52
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 89

State 52

	Expr6 -> '(' . Expr ')'                             (rule 50)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 79

State 53

	Expr5 -> '-' . Expr6                                (rule 53)

	'('            shift, and enter state 52
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 88

State 54

	Expr6 -> 'false' .                                  (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'.'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 55

	Expr6 -> 'new' . Ident                              (rule 44)

	L_ident        shift, and enter state 2

	Ident          goto state 87

State 56

	Expr6 -> 'true' .                                   (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'.'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 57

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 58

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 59

	ClsBowel -> Type Ident '(' ListArg . ')' Block      (rule 15)

	')'            shift, and enter state 86


State 60

	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 40


State 61

	ListItem -> Item ',' ListItem .                     (rule 37)

	';'            reduce using rule 37


State 62

	Stmt -> Ident . '=' Expr ';'                        (rule 24)
	Stmt -> Ident . '++' ';'                            (rule 25)
	Stmt -> Ident . '--' ';'                            (rule 26)
	Type -> Ident .                                     (rule 38)
	Expr6 -> Ident .                                    (rule 43)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 48)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 82
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	'++'           shift, and enter state 83
	'-'            reduce using rule 43
	'--'           shift, and enter state 84
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            shift, and enter state 85
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43
	L_ident        reduce using rule 38


State 63

	Stmt -> Block .                                     (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 64

	ListStmt -> ListStmt Stmt .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 65

	Stmt -> Type . ListItem ';'                         (rule 23)

	L_ident        shift, and enter state 2

	Ident          goto state 60
	Item           goto state 29
	ListItem       goto state 81

State 66

	Stmt -> Expr . ';'                                  (rule 32)

	';'            shift, and enter state 80


State 67

	Stmt -> '(' . Type ')null'                          (rule 33)
	Expr6 -> '(' . Expr ')'                             (rule 50)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	'void'         shift, and enter state 9
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 77
	Integer        goto state 42
	String         goto state 43
	Type           goto state 78
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 79

State 68

	Stmt -> ';' .                                       (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 69

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 30)

	'('            shift, and enter state 76


State 70

	Stmt -> 'return' . Expr ';'                         (rule 27)
	Stmt -> 'return' . ';'                              (rule 28)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	';'            shift, and enter state 75
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 74

State 71

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 31)

	'('            shift, and enter state 73


State 72

	Block -> '{' ListStmt '}' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'class'        reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 73

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 31)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 124

State 74

	Stmt -> 'return' Expr . ';'                         (rule 27)

	';'            shift, and enter state 123


State 75

	Stmt -> 'return' ';' .                              (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 76

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 122

State 77

	Type -> Ident .                                     (rule 38)
	Expr6 -> Ident .                                    (rule 43)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 48)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 82
	')'            reduce using rule 43
	')null'        reduce using rule 38
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 78

	Stmt -> '(' Type . ')null'                          (rule 33)

	')null'        shift, and enter state 121


State 79

	Expr6 -> '(' Expr . ')'                             (rule 50)

	')'            shift, and enter state 120


State 80

	Stmt -> Expr ';' .                                  (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 81

	Stmt -> Type ListItem . ';'                         (rule 23)

	';'            shift, and enter state 119


State 82

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 48)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	')'            reduce using rule 66
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 117
	ListExpr       goto state 118

State 83

	Stmt -> Ident '++' . ';'                            (rule 25)

	';'            shift, and enter state 116


State 84

	Stmt -> Ident '--' . ';'                            (rule 26)

	';'            shift, and enter state 115


State 85

	Stmt -> Ident '=' . Expr ';'                        (rule 24)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 114

State 86

	ClsBowel -> Type Ident '(' ListArg ')' . Block      (rule 15)

	'{'            shift, and enter state 34

	Block          goto state 113

State 87

	Expr6 -> 'new' Ident .                              (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'.'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 88

	Expr5 -> '-' Expr6 .                                (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 89

	Expr5 -> '!' Expr6 .                                (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 90

	Expr -> Expr1 '||' . Expr                           (rule 64)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 112

State 91

	Expr2 -> Expr2 RelOp . Expr3                        (rule 60)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 111

State 92

	RelOp -> '!=' .                                     (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'true'         reduce using rule 79
	L_ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 93

	Expr1 -> Expr2 '&&' . Expr1                         (rule 62)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 110

State 94

	RelOp -> '<' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'new'          reduce using rule 74
	'true'         reduce using rule 74
	L_ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 95

	RelOp -> '<=' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'new'          reduce using rule 75
	'true'         reduce using rule 75
	L_ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 96

	RelOp -> '==' .                                     (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'true'         reduce using rule 78
	L_ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 97

	RelOp -> '>' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'new'          reduce using rule 76
	'true'         reduce using rule 76
	L_ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 98

	RelOp -> '>=' .                                     (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'new'          reduce using rule 77
	'true'         reduce using rule 77
	L_ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 99

	Expr3 -> Expr3 AddOp . Expr4                        (rule 58)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 109

State 100

	AddOp -> '+' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'new'          reduce using rule 69
	'true'         reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 101

	AddOp -> '-' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'new'          reduce using rule 70
	'true'         reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 102

	Expr4 -> Expr4 MulOp . Expr5                        (rule 56)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 108

State 103

	MulOp -> '%' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'new'          reduce using rule 73
	'true'         reduce using rule 73
	L_ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 104

	MulOp -> '*' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'new'          reduce using rule 71
	'true'         reduce using rule 71
	L_ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 105

	MulOp -> '/' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'new'          reduce using rule 72
	'true'         reduce using rule 72
	L_ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 106

	Expr5 -> Expr5 '.' . Ident                          (rule 51)
	Expr5 -> Expr5 '.' . Ident '(' ListExpr ')'         (rule 52)

	L_ident        shift, and enter state 2

	Ident          goto state 107

State 107

	Expr5 -> Expr5 '.' Ident .                          (rule 51)
	Expr5 -> Expr5 '.' Ident . '(' ListExpr ')'         (rule 52)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            shift, and enter state 130
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 108

	Expr5 -> Expr5 . '.' Ident                          (rule 51)
	Expr5 -> Expr5 . '.' Ident '(' ListExpr ')'         (rule 52)
	Expr4 -> Expr4 MulOp Expr5 .                        (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'.'            shift, and enter state 106
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56


State 109

	Expr4 -> Expr4 . MulOp Expr5                        (rule 56)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 58)

	'!='           reduce using rule 58
	'%'            shift, and enter state 103
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            shift, and enter state 104
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            shift, and enter state 105
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58

	MulOp          goto state 102

State 110

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62
	'||'           reduce using rule 62


State 111

	Expr3 -> Expr3 . AddOp Expr4                        (rule 58)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 60)

	'!='           reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'+'            shift, and enter state 100
	','            reduce using rule 60
	'-'            shift, and enter state 101
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60

	AddOp          goto state 99

State 112

	Expr -> Expr1 '||' Expr .                           (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64


State 113

	ClsBowel -> Type Ident '(' ListArg ')' Block .      (rule 15)

	'void'         reduce using rule 15
	'}'            reduce using rule 15
	L_ident        reduce using rule 15


State 114

	Stmt -> Ident '=' Expr . ';'                        (rule 24)

	';'            shift, and enter state 129


State 115

	Stmt -> Ident '--' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 116

	Stmt -> Ident '++' ';' .                            (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 117

	ListExpr -> Expr .                                  (rule 67)
	ListExpr -> Expr . ',' ListExpr                     (rule 68)

	')'            reduce using rule 67
	','            shift, and enter state 128


State 118

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 48)

	')'            shift, and enter state 127


State 119

	Stmt -> Type ListItem ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 120

	Expr6 -> '(' Expr ')' .                             (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 121

	Stmt -> '(' Type ')null' .                          (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 122

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 30)

	')'            shift, and enter state 126


State 123

	Stmt -> 'return' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 124

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 31)

	')'            shift, and enter state 125


State 125

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 31)

	'!'            shift, and enter state 51
	'('            shift, and enter state 67
	'-'            shift, and enter state 53
	';'            shift, and enter state 68
	'false'        shift, and enter state 54
	'if'           shift, and enter state 69
	'new'          shift, and enter state 55
	'return'       shift, and enter state 70
	'true'         shift, and enter state 56
	'void'         shift, and enter state 9
	'while'        shift, and enter state 71
	'{'            shift, and enter state 34
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 62
	Integer        goto state 42
	String         goto state 43
	Block          goto state 63
	Stmt           goto state 134
	Type           goto state 65
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 66

State 126

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 51
	'('            shift, and enter state 67
	'-'            shift, and enter state 53
	';'            shift, and enter state 68
	'false'        shift, and enter state 54
	'if'           shift, and enter state 69
	'new'          shift, and enter state 55
	'return'       shift, and enter state 70
	'true'         shift, and enter state 56
	'void'         shift, and enter state 9
	'while'        shift, and enter state 71
	'{'            shift, and enter state 34
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 62
	Integer        goto state 42
	String         goto state 43
	Block          goto state 63
	Stmt           goto state 133
	Type           goto state 65
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 66

State 127

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 128

	ListExpr -> Expr ',' . ListExpr                     (rule 68)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	')'            reduce using rule 66
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 117
	ListExpr       goto state 132

State 129

	Stmt -> Ident '=' Expr ';' .                        (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 130

	Expr5 -> Expr5 '.' Ident '(' . ListExpr ')'         (rule 52)

	'!'            shift, and enter state 51
	'('            shift, and enter state 52
	')'            reduce using rule 66
	'-'            shift, and enter state 53
	'false'        shift, and enter state 54
	'new'          shift, and enter state 55
	'true'         shift, and enter state 56
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 117
	ListExpr       goto state 131

State 131

	Expr5 -> Expr5 '.' Ident '(' ListExpr . ')'         (rule 52)

	')'            shift, and enter state 136


State 132

	ListExpr -> Expr ',' ListExpr .                     (rule 68)

	')'            reduce using rule 68


State 133

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 29)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 30)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'else'         shift, and enter state 135
			(reduce using rule 29)

	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 134

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 135

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 30)

	'!'            shift, and enter state 51
	'('            shift, and enter state 67
	'-'            shift, and enter state 53
	';'            shift, and enter state 68
	'false'        shift, and enter state 54
	'if'           shift, and enter state 69
	'new'          shift, and enter state 55
	'return'       shift, and enter state 70
	'true'         shift, and enter state 56
	'void'         shift, and enter state 9
	'while'        shift, and enter state 71
	'{'            shift, and enter state 34
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 57
	L_quoted       shift, and enter state 58

	Ident          goto state 62
	Integer        goto state 42
	String         goto state 43
	Block          goto state 63
	Stmt           goto state 137
	Type           goto state 65
	Expr6          goto state 44
	Expr5          goto state 45
	Expr4          goto state 46
	Expr3          goto state 47
	Expr2          goto state 48
	Expr1          goto state 49
	Expr           goto state 66

State 136

	Expr5 -> Expr5 '.' Ident '(' ListExpr ')' .         (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 137

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 80
Number of terminals: 38
Number of non-terminals: 29
Number of states: 138
