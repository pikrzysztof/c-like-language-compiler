-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Gramatyka/ParLatte.y
-----------------------------------------------------------------------------

state 137 contains 1 shift/reduce conflicts.

rule 45 is unused
rule 46 is unused
rule 47 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident '{' ListClsBowel '}'       (6)
	TopDef -> 'class' Ident 'extends' Ident '{' ListClsBowel '}'   (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Arg -> Type Ident                                  (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	ClsBowel -> Type ListIdent ';'                     (14)
	ClsBowel -> Type Ident '(' ListArg ')' Block       (15)
	ListClsBowel ->                                    (16)
	ListClsBowel -> ListClsBowel ClsBowel              (17)
	ListIdent ->                                       (18)
	ListIdent -> Ident                                 (19)
	ListIdent -> Ident ',' ListIdent                   (20)
	Block -> '{' ListStmt '}'                          (21)
	ListStmt ->                                        (22)
	ListStmt -> ListStmt Stmt                          (23)
	Stmt -> ';'                                        (24)
	Stmt -> Block                                      (25)
	Stmt -> Type ListItem ';'                          (26)
	Stmt -> Expr '=' Expr ';'                          (27)
	Stmt -> Expr '++' ';'                              (28)
	Stmt -> Expr '--' ';'                              (29)
	Stmt -> 'return' Expr ';'                          (30)
	Stmt -> 'return' ';'                               (31)
	Stmt -> 'if' '(' Expr ')' Stmt                     (32)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (33)
	Stmt -> 'while' '(' Expr ')' Stmt                  (34)
	Stmt -> Expr ';'                                   (35)
	Item -> Ident                                      (36)
	Item -> Ident '=' Expr                             (37)
	ListItem -> Item                                   (38)
	ListItem -> Item ',' ListItem                      (39)
	Type -> 'int'                                      (40)
	Type -> 'string'                                   (41)
	Type -> 'boolean'                                  (42)
	Type -> Ident                                      (43)
	Type -> 'void'                                     (44)
	ListType ->                                        (45)
	ListType -> Type                                   (46)
	ListType -> Type ',' ListType                      (47)
	Expr6 -> '(' Ident ')null'                         (48)
	Expr6 -> Ident                                     (49)
	Expr6 -> 'new' Ident                               (50)
	Expr6 -> Integer                                   (51)
	Expr6 -> 'true'                                    (52)
	Expr6 -> 'false'                                   (53)
	Expr6 -> Ident '(' ListExpr ')'                    (54)
	Expr6 -> String                                    (55)
	Expr6 -> '(' Expr ')'                              (56)
	Expr5 -> Expr5 '.' Ident                           (57)
	Expr5 -> Expr5 '.' Ident '(' ListExpr ')'          (58)
	Expr5 -> '-' Expr6                                 (59)
	Expr5 -> '!' Expr6                                 (60)
	Expr5 -> Expr6                                     (61)
	Expr4 -> Expr4 MulOp Expr5                         (62)
	Expr4 -> Expr5                                     (63)
	Expr3 -> Expr3 AddOp Expr4                         (64)
	Expr3 -> Expr4                                     (65)
	Expr2 -> Expr2 RelOp Expr3                         (66)
	Expr2 -> Expr3                                     (67)
	Expr1 -> Expr2 '&&' Expr1                          (68)
	Expr1 -> Expr2                                     (69)
	Expr -> Expr1 '||' Expr                            (70)
	Expr -> Expr1                                      (71)
	ListExpr ->                                        (72)
	ListExpr -> Expr                                   (73)
	ListExpr -> Expr ',' ListExpr                      (74)
	AddOp -> '+'                                       (75)
	AddOp -> '-'                                       (76)
	MulOp -> '*'                                       (77)
	MulOp -> '/'                                       (78)
	MulOp -> '%'                                       (79)
	RelOp -> '<'                                       (80)
	RelOp -> '<='                                      (81)
	RelOp -> '>'                                       (82)
	RelOp -> '>='                                      (83)
	RelOp -> '=='                                      (84)
	RelOp -> '!='                                      (85)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	')null'        { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'boolean'      { PT _ (TS _ 23) }
	'class'        { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'extends'      { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'new'          { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'true'         { PT _ (TS _ 33) }
	'void'         { PT _ (TS _ 34) }
	'while'        { PT _ (TS _ 35) }
	'{'            { PT _ (TS _ 36) }
	'||'           { PT _ (TS _ 37) }
	'}'            { PT _ (TS _ 38) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ListTopDef      rules 8, 9
	Arg             rule  10
	ListArg         rules 11, 12, 13
	ClsBowel        rules 14, 15
	ListClsBowel    rules 16, 17
	ListIdent       rules 18, 19, 20
	Block           rule  21
	ListStmt        rules 22, 23
	Stmt            rules 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
	Item            rules 36, 37
	ListItem        rules 38, 39
	Type            rules 40, 41, 42, 43, 44
	ListType        rules 45, 46, 47
	Expr6           rules 48, 49, 50, 51, 52, 53, 54, 55, 56
	Expr5           rules 57, 58, 59, 60, 61
	Expr4           rules 62, 63
	Expr3           rules 64, 65
	Expr2           rules 66, 67
	Expr1           rules 68, 69
	Expr            rules 70, 71
	ListExpr        rules 72, 73, 74
	AddOp           rules 75, 76
	MulOp           rules 77, 78, 79
	RelOp           rules 80, 81, 82, 83, 84, 85

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	')null'        reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 43)

	';'            reduce using rule 43
	L_ident        reduce using rule 43


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2
	%eof           reduce using rule 8

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 15
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 42)

	';'            reduce using rule 42
	L_ident        reduce using rule 42


State 9

	TopDef -> 'class' . Ident '{' ListClsBowel '}'      (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident '{' ListClsBowel '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 40)

	';'            reduce using rule 40
	L_ident        reduce using rule 40


State 11

	Type -> 'string' .                                  (rule 41)

	';'            reduce using rule 41
	L_ident        reduce using rule 41


State 12

	Type -> 'void' .                                    (rule 44)

	';'            reduce using rule 44
	L_ident        reduce using rule 44


State 13

	TopDef -> 'class' Ident . '{' ListClsBowel '}'      (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident '{' ListClsBowel '}'    (rule 7)

	'extends'      shift, and enter state 17
	'{'            shift, and enter state 18


State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 16


State 15

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 16

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 21
	ListArg        goto state 22
	Type           goto state 23

State 17

	TopDef -> 'class' Ident 'extends' . Ident '{' ListClsBowel '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 20

State 18

	TopDef -> 'class' Ident '{' . ListClsBowel '}'      (rule 6)

	'boolean'      reduce using rule 16
	'int'          reduce using rule 16
	'string'       reduce using rule 16
	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16

	ListClsBowel   goto state 19

State 19

	TopDef -> 'class' Ident '{' ListClsBowel . '}'      (rule 6)
	ListClsBowel -> ListClsBowel . ClsBowel             (rule 17)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            shift, and enter state 30
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClsBowel       goto state 28
	Type           goto state 29

State 20

	TopDef -> 'class' Ident 'extends' Ident . '{' ListClsBowel '}'    (rule 7)

	'{'            shift, and enter state 27


State 21

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 26


State 22

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 25


State 23

	Arg -> Type . Ident                                 (rule 10)

	L_ident        shift, and enter state 2

	Ident          goto state 24

State 24

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 25

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 36

	Block          goto state 35

State 26

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 21
	ListArg        goto state 34
	Type           goto state 23

State 27

	TopDef -> 'class' Ident 'extends' Ident '{' . ListClsBowel '}'    (rule 7)

	'boolean'      reduce using rule 16
	'int'          reduce using rule 16
	'string'       reduce using rule 16
	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16

	ListClsBowel   goto state 33

State 28

	ListClsBowel -> ListClsBowel ClsBowel .             (rule 17)

	'boolean'      reduce using rule 17
	'int'          reduce using rule 17
	'string'       reduce using rule 17
	'void'         reduce using rule 17
	'}'            reduce using rule 17
	L_ident        reduce using rule 17


State 29

	ClsBowel -> Type . ListIdent ';'                    (rule 14)
	ClsBowel -> Type . Ident '(' ListArg ')' Block      (rule 15)

	';'            reduce using rule 18
	L_ident        shift, and enter state 2

	Ident          goto state 31
	ListIdent      goto state 32

State 30

	TopDef -> 'class' Ident '{' ListClsBowel '}' .      (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_ident        reduce using rule 6
	%eof           reduce using rule 6


State 31

	ClsBowel -> Type Ident . '(' ListArg ')' Block      (rule 15)
	ListIdent -> Ident .                                (rule 19)
	ListIdent -> Ident . ',' ListIdent                  (rule 20)

	'('            shift, and enter state 40
	','            shift, and enter state 41
	';'            reduce using rule 19


State 32

	ClsBowel -> Type ListIdent . ';'                    (rule 14)

	';'            shift, and enter state 39


State 33

	TopDef -> 'class' Ident 'extends' Ident '{' ListClsBowel . '}'    (rule 7)
	ListClsBowel -> ListClsBowel . ClsBowel             (rule 17)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            shift, and enter state 38
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClsBowel       goto state 28
	Type           goto state 29

State 34

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 35

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 36

	Block -> '{' . ListStmt '}'                         (rule 21)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22

	ListStmt       goto state 37

State 37

	Block -> '{' ListStmt . '}'                         (rule 21)
	ListStmt -> ListStmt . Stmt                         (rule 23)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'if'           shift, and enter state 63
	'int'          shift, and enter state 10
	'new'          shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 36
	'}'            shift, and enter state 68
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	Stmt           goto state 49
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 38

	TopDef -> 'class' Ident 'extends' Ident '{' ListClsBowel '}' .    (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_ident        reduce using rule 7
	%eof           reduce using rule 7


State 39

	ClsBowel -> Type ListIdent ';' .                    (rule 14)

	'boolean'      reduce using rule 14
	'int'          reduce using rule 14
	'string'       reduce using rule 14
	'void'         reduce using rule 14
	'}'            reduce using rule 14
	L_ident        reduce using rule 14


State 40

	ClsBowel -> Type Ident '(' . ListArg ')' Block      (rule 15)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 21
	ListArg        goto state 44
	Type           goto state 23

State 41

	ListIdent -> Ident ',' . ListIdent                  (rule 20)

	';'            reduce using rule 18
	L_ident        shift, and enter state 2

	Ident          goto state 42
	ListIdent      goto state 43

State 42

	ListIdent -> Ident .                                (rule 19)
	ListIdent -> Ident . ',' ListIdent                  (rule 20)

	','            shift, and enter state 41
	';'            reduce using rule 19


State 43

	ListIdent -> Ident ',' ListIdent .                  (rule 20)

	';'            reduce using rule 20


State 44

	ClsBowel -> Type Ident '(' ListArg . ')' Block      (rule 15)

	')'            shift, and enter state 106


State 45

	Type -> Ident .                                     (rule 43)
	Expr6 -> Ident .                                    (rule 49)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 54)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            shift, and enter state 105
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49
	L_ident        reduce using rule 43


State 46

	Expr6 -> Integer .                                  (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 47

	Expr6 -> String .                                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 48

	Stmt -> Block .                                     (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 49

	ListStmt -> ListStmt Stmt .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 50

	Stmt -> Type . ListItem ';'                         (rule 26)

	L_ident        shift, and enter state 2

	Ident          goto state 102
	Item           goto state 103
	ListItem       goto state 104

State 51

	Expr5 -> Expr6 .                                    (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'++'           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'.'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61


State 52

	Expr5 -> Expr5 . '.' Ident                          (rule 57)
	Expr5 -> Expr5 . '.' Ident '(' ListExpr ')'         (rule 58)
	Expr4 -> Expr5 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'++'           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'--'           reduce using rule 63
	'.'            shift, and enter state 101
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63


State 53

	Expr4 -> Expr4 . MulOp Expr5                        (rule 62)
	Expr3 -> Expr4 .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            shift, and enter state 98
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 99
	'+'            reduce using rule 65
	'++'           reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'--'           reduce using rule 65
	'/'            shift, and enter state 100
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'||'           reduce using rule 65

	MulOp          goto state 97

State 54

	Expr3 -> Expr3 . AddOp Expr4                        (rule 64)
	Expr2 -> Expr3 .                                    (rule 67)

	'!='           reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'+'            shift, and enter state 95
	'++'           reduce using rule 67
	','            reduce using rule 67
	'-'            shift, and enter state 96
	'--'           reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'||'           reduce using rule 67

	AddOp          goto state 94

State 55

	Expr2 -> Expr2 . RelOp Expr3                        (rule 66)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 68)
	Expr1 -> Expr2 .                                    (rule 69)

	'!='           shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            reduce using rule 69
	'++'           reduce using rule 69
	','            reduce using rule 69
	'--'           reduce using rule 69
	';'            reduce using rule 69
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'='            reduce using rule 69
	'=='           shift, and enter state 91
	'>'            shift, and enter state 92
	'>='           shift, and enter state 93
	'||'           reduce using rule 69

	RelOp          goto state 86

State 56

	Expr -> Expr1 . '||' Expr                           (rule 70)
	Expr -> Expr1 .                                     (rule 71)

	')'            reduce using rule 71
	'++'           reduce using rule 71
	','            reduce using rule 71
	'--'           reduce using rule 71
	';'            reduce using rule 71
	'='            reduce using rule 71
	'||'           shift, and enter state 85


State 57

	Stmt -> Expr . '=' Expr ';'                         (rule 27)
	Stmt -> Expr . '++' ';'                             (rule 28)
	Stmt -> Expr . '--' ';'                             (rule 29)
	Stmt -> Expr . ';'                                  (rule 35)

	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	';'            shift, and enter state 83
	'='            shift, and enter state 84


State 58

	Expr5 -> '!' . Expr6                                (rule 60)

	'('            shift, and enter state 59
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 80

State 59

	Expr6 -> '(' . Ident ')null'                        (rule 48)
	Expr6 -> '(' . Expr ')'                             (rule 56)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 78
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 79

State 60

	Expr5 -> '-' . Expr6                                (rule 59)

	'('            shift, and enter state 59
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 77

State 61

	Stmt -> ';' .                                       (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 62

	Expr6 -> 'false' .                                  (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 63

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 32)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 33)

	'('            shift, and enter state 76


State 64

	Expr6 -> 'new' . Ident                              (rule 50)

	L_ident        shift, and enter state 2

	Ident          goto state 75

State 65

	Stmt -> 'return' . Expr ';'                         (rule 30)
	Stmt -> 'return' . ';'                              (rule 31)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 74
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 73

State 66

	Expr6 -> 'true' .                                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 67

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 34)

	'('            shift, and enter state 71


State 68

	Block -> '{' ListStmt '}' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'class'        reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	%eof           reduce using rule 21


State 69

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 70

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 71

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 34)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 126

State 72

	Expr6 -> Ident .                                    (rule 49)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 54)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            shift, and enter state 105
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 73

	Stmt -> 'return' Expr . ';'                         (rule 30)

	';'            shift, and enter state 125


State 74

	Stmt -> 'return' ';' .                              (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 75

	Expr6 -> 'new' Ident .                              (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 76

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 32)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 33)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 124

State 77

	Expr5 -> '-' Expr6 .                                (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'++'           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59


State 78

	Expr6 -> '(' Ident . ')null'                        (rule 48)
	Expr6 -> Ident .                                    (rule 49)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 54)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            shift, and enter state 105
	')'            reduce using rule 49
	')null'        shift, and enter state 123
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 79

	Expr6 -> '(' Expr . ')'                             (rule 56)

	')'            shift, and enter state 122


State 80

	Expr5 -> '!' Expr6 .                                (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	'++'           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'.'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60


State 81

	Stmt -> Expr '++' . ';'                             (rule 28)

	';'            shift, and enter state 121


State 82

	Stmt -> Expr '--' . ';'                             (rule 29)

	';'            shift, and enter state 120


State 83

	Stmt -> Expr ';' .                                  (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'boolean'      reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'new'          reduce using rule 35
	'return'       reduce using rule 35
	'string'       reduce using rule 35
	'true'         reduce using rule 35
	'void'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


State 84

	Stmt -> Expr '=' . Expr ';'                         (rule 27)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 119

State 85

	Expr -> Expr1 '||' . Expr                           (rule 70)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 118

State 86

	Expr2 -> Expr2 RelOp . Expr3                        (rule 66)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 117

State 87

	RelOp -> '!=' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 88

	Expr1 -> Expr2 '&&' . Expr1                         (rule 68)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 116

State 89

	RelOp -> '<' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 90

	RelOp -> '<=' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 91

	RelOp -> '==' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 92

	RelOp -> '>' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 93

	RelOp -> '>=' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 94

	Expr3 -> Expr3 AddOp . Expr4                        (rule 64)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 115

State 95

	AddOp -> '+' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'new'          reduce using rule 75
	'true'         reduce using rule 75
	L_ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 96

	AddOp -> '-' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'new'          reduce using rule 76
	'true'         reduce using rule 76
	L_ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 97

	Expr4 -> Expr4 MulOp . Expr5                        (rule 62)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 114

State 98

	MulOp -> '%' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'true'         reduce using rule 79
	L_ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 99

	MulOp -> '*' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'new'          reduce using rule 77
	'true'         reduce using rule 77
	L_ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 100

	MulOp -> '/' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'true'         reduce using rule 78
	L_ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 101

	Expr5 -> Expr5 '.' . Ident                          (rule 57)
	Expr5 -> Expr5 '.' . Ident '(' ListExpr ')'         (rule 58)

	L_ident        shift, and enter state 2

	Ident          goto state 113

State 102

	Item -> Ident .                                     (rule 36)
	Item -> Ident . '=' Expr                            (rule 37)

	','            reduce using rule 36
	';'            reduce using rule 36
	'='            shift, and enter state 112


State 103

	ListItem -> Item .                                  (rule 38)
	ListItem -> Item . ',' ListItem                     (rule 39)

	','            shift, and enter state 111
	';'            reduce using rule 38


State 104

	Stmt -> Type ListItem . ';'                         (rule 26)

	';'            shift, and enter state 110


State 105

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 54)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 72
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 108
	ListExpr       goto state 109

State 106

	ClsBowel -> Type Ident '(' ListArg ')' . Block      (rule 15)

	'{'            shift, and enter state 36

	Block          goto state 107

State 107

	ClsBowel -> Type Ident '(' ListArg ')' Block .      (rule 15)

	'boolean'      reduce using rule 15
	'int'          reduce using rule 15
	'string'       reduce using rule 15
	'void'         reduce using rule 15
	'}'            reduce using rule 15
	L_ident        reduce using rule 15


State 108

	ListExpr -> Expr .                                  (rule 73)
	ListExpr -> Expr . ',' ListExpr                     (rule 74)

	')'            reduce using rule 73
	','            shift, and enter state 134


State 109

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 54)

	')'            shift, and enter state 133


State 110

	Stmt -> Type ListItem ';' .                         (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 111

	ListItem -> Item ',' . ListItem                     (rule 39)

	L_ident        shift, and enter state 2

	Ident          goto state 102
	Item           goto state 103
	ListItem       goto state 132

State 112

	Item -> Ident '=' . Expr                            (rule 37)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 131

State 113

	Expr5 -> Expr5 '.' Ident .                          (rule 57)
	Expr5 -> Expr5 '.' Ident . '(' ListExpr ')'         (rule 58)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            shift, and enter state 130
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57


State 114

	Expr5 -> Expr5 . '.' Ident                          (rule 57)
	Expr5 -> Expr5 . '.' Ident '(' ListExpr ')'         (rule 58)
	Expr4 -> Expr4 MulOp Expr5 .                        (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'++'           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'.'            shift, and enter state 101
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62


State 115

	Expr4 -> Expr4 . MulOp Expr5                        (rule 62)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 64)

	'!='           reduce using rule 64
	'%'            shift, and enter state 98
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            shift, and enter state 99
	'+'            reduce using rule 64
	'++'           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'--'           reduce using rule 64
	'/'            shift, and enter state 100
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64

	MulOp          goto state 97

State 116

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 68)

	')'            reduce using rule 68
	'++'           reduce using rule 68
	','            reduce using rule 68
	'--'           reduce using rule 68
	';'            reduce using rule 68
	'='            reduce using rule 68
	'||'           reduce using rule 68


State 117

	Expr3 -> Expr3 . AddOp Expr4                        (rule 64)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 66)

	'!='           reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'+'            shift, and enter state 95
	'++'           reduce using rule 66
	','            reduce using rule 66
	'-'            shift, and enter state 96
	'--'           reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'||'           reduce using rule 66

	AddOp          goto state 94

State 118

	Expr -> Expr1 '||' Expr .                           (rule 70)

	')'            reduce using rule 70
	'++'           reduce using rule 70
	','            reduce using rule 70
	'--'           reduce using rule 70
	';'            reduce using rule 70
	'='            reduce using rule 70


State 119

	Stmt -> Expr '=' Expr . ';'                         (rule 27)

	';'            shift, and enter state 129


State 120

	Stmt -> Expr '--' ';' .                             (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 121

	Stmt -> Expr '++' ';' .                             (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 122

	Expr6 -> '(' Expr ')' .                             (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56


State 123

	Expr6 -> '(' Ident ')null' .                        (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'--'           reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 124

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 32)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 33)

	')'            shift, and enter state 128


State 125

	Stmt -> 'return' Expr ';' .                         (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 126

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 34)

	')'            shift, and enter state 127


State 127

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 34)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'if'           shift, and enter state 63
	'int'          shift, and enter state 10
	'new'          shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 36
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	Stmt           goto state 138
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 128

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 32)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 33)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'if'           shift, and enter state 63
	'int'          shift, and enter state 10
	'new'          shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 36
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	Stmt           goto state 137
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 129

	Stmt -> Expr '=' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 130

	Expr5 -> Expr5 '.' Ident '(' . ListExpr ')'         (rule 58)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 72
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 108
	ListExpr       goto state 136

State 131

	Item -> Ident '=' Expr .                            (rule 37)

	','            reduce using rule 37
	';'            reduce using rule 37


State 132

	ListItem -> Item ',' ListItem .                     (rule 39)

	';'            reduce using rule 39


State 133

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 134

	ListExpr -> Expr ',' . ListExpr                     (rule 74)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 72
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 108
	ListExpr       goto state 135

State 135

	ListExpr -> Expr ',' ListExpr .                     (rule 74)

	')'            reduce using rule 74


State 136

	Expr5 -> Expr5 '.' Ident '(' ListExpr . ')'         (rule 58)

	')'            shift, and enter state 140


State 137

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 32)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 33)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         shift, and enter state 139
			(reduce using rule 32)

	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 138

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 139

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 33)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'if'           shift, and enter state 63
	'int'          shift, and enter state 10
	'new'          shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 36
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	Stmt           goto state 141
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 140

	Expr5 -> Expr5 '.' Ident '(' ListExpr ')' .         (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	'++'           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58


State 141

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 86
Number of terminals: 41
Number of non-terminals: 30
Number of states: 142
